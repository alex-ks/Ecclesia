// <auto-generated />
using Ecclesia.Resolver.Orm;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Ecclesia.Resolver.Orm.Migrations
{
    [DbContext(typeof(NpgsqlResolverContext))]
    partial class NpgsqlResolverContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Ecclesia.Resolver.Orm.Models.Atom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Kind")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Version")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Kind", "Name", "Version");

                    b.ToTable("Atoms");
                });

            modelBuilder.Entity("Ecclesia.Resolver.Orm.Models.AtomContent", b =>
                {
                    b.Property<long>("AtomId");

                    b.Property<byte[]>("Content")
                        .HasColumnType("bytea");

                    b.HasKey("AtomId");

                    b.ToTable("AtomContents");
                });

            modelBuilder.Entity("Ecclesia.Resolver.Orm.Models.AtomDependency", b =>
                {
                    b.Property<long>("DependentId");

                    b.Property<long>("DependencyId");

                    b.HasKey("DependentId", "DependencyId");

                    b.HasIndex("DependencyId");

                    b.ToTable("AtomDependencies");
                });

            modelBuilder.Entity("Ecclesia.Resolver.Orm.Models.AtomContent", b =>
                {
                    b.HasOne("Ecclesia.Resolver.Orm.Models.Atom", "Atom")
                        .WithOne("Content")
                        .HasForeignKey("Ecclesia.Resolver.Orm.Models.AtomContent", "AtomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ecclesia.Resolver.Orm.Models.AtomDependency", b =>
                {
                    b.HasOne("Ecclesia.Resolver.Orm.Models.Atom", "Dependency")
                        .WithMany("Dependent")
                        .HasForeignKey("DependencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ecclesia.Resolver.Orm.Models.Atom", "Dependent")
                        .WithMany("Dependencies")
                        .HasForeignKey("DependentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
